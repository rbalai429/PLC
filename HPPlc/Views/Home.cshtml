@inherits Umbraco.Web.Mvc.UmbracoViewPage
@using Umbraco.Web.Models
@{
	Layout = "masterpage.cshtml";
	var CultureInfo = Model.GetCultureFromDomains();

	var vrNoreId = Model.Id;
	var CurrentPageDetails = Umbraco?.Content(vrNoreId);
	string OpenLoginWindow = String.Empty;

	int HomeContainerId = 0;
	var Container = Umbraco?.Content(vrNoreId)?.Children?.Where(x => x.ContentType.Alias == "homeContainer")?.FirstOrDefault();
	if (Container != null)
	{
		HomeContainerId = Container.Id;
	}
	//var Banner = Umbraco?.Content(HomeContainerId)?.Children?.Where(x => x.ContentType.Alias == "banner").FirstOrDefault();
	//var CategoryBanner = Umbraco?.Content(HomeContainerId)?.Children?.Where(x => x.ContentType.Alias == "categoryBanner").FirstOrDefault();
	var SignUpSection = Umbraco?.Content(HomeContainerId)?.Children?.Where(x => x.ContentType.Alias == "homePageSignUpSection").FirstOrDefault();

	//var vrAgrGroupe = Model?.Children?.Where(x => x.ContentType.Alias == "masterRoot")?.
	//	FirstOrDefault()?.Children?.Where(x => x.ContentType.Alias == "ageMaster")?.FirstOrDefault()?.Children?.OfType<NameListItem>()?.Where(x => x.IsActice);

	//var vrCategory = Model?.Children?.Where(x => x.ContentType.Alias == "masterRoot")?.
	//	FirstOrDefault()?.Children?.Where(x => x.ContentType.Alias == "categoryMaster")?.FirstOrDefault()?.Children?.OfType<NameListItem>()?.Where(x => x.IsActice);

	var BonusWorkSheetNode = Umbraco?.ContentAtRoot()?.Where(x => x.ContentType.Alias == "home")?.FirstOrDefault()?.DescendantsOrSelf()?
						.Where(x => x.ContentType.Alias == "structureProgramRoot").OfType<StructureProgramRoot>().FirstOrDefault();


	//	var WorkSheetNode = Umbraco?.Content(vrNoreId)?
	//.Children?.Where(x => x.ContentType.Alias == "worksheetNode")?.OfType<WorksheetNode>().FirstOrDefault();

	//var BonusWorkSheetNode = Umbraco?.Content(vrNoreId)?
	//	.Children?.Where(x => x.ContentType.Alias == "structureProgramRoot")?.OfType<StructureProgramRoot>().FirstOrDefault();
	var SortBy = Umbraco.GetDictionaryValue("SortBy");
	var FilterBy = Umbraco.GetDictionaryValue("FilterBy");

	var SortByOptions = Umbraco?.ContentAtRoot()?.Where(x => x.ContentType.Alias == "home")?.FirstOrDefault()?.Children?
					 .Where(x => x.ContentType.Alias == "masterRoot")?.FirstOrDefault()?.Children?
											.Where(x => x.ContentType.Alias == "sortMaster")?.FirstOrDefault()?.Children?
												.OfType<NameListItem>().Where(x => x.IsActice).ToList();

	//var Worksheet = Umbraco?.Content(WorkSheetNode?.Id);

	//var VideoNode = Umbraco?.Content(vrNoreId).Children.Where(x => x.ContentType.Alias == "videos").FirstOrDefault();
	//var Videos = Umbraco?.Content(VideoNode.Id);

	//var ExpertNode = Umbraco?.Content(vrNoreId).Children.Where(x => x.ContentType.Alias == "zoomMeeting").FirstOrDefault();
	//var Experts = Umbraco?.Content(ExpertNode.Id);
	//var RemainingMinutesInMeeting = Experts.Value<string>("joinNowAppearsTimeInMunites");

	//Session["USERID"] = "1";
	//string vUserId = Session["USERID"].ToString();
	//string vSubscriptionName = "FREE";


	//Check User LoggedIn Or Not
	//var UserLoggedIn = HPPlc.Models.SessionManagement.GetCurrentSession<string>(HPPlc.Models.SessionType.IsLoggedIn);
	//string SubscriptionValidationText = HPPlc.Models.SessionManagement.GetCurrentSession<string>(HPPlc.Models.SessionType.SubscriptionValidationText);

	//get download text
	var downloadText = Umbraco.GetDictionaryValue("Download Button");
	var SubscribefordownloadText = Umbraco.GetDictionaryValue("Subscribe to download");
	var seeMore = Umbraco.GetDictionaryValue("See More");
	var buyNow = Umbraco.GetDictionaryValue("Upgrade to Premium");
	var BuyNewSubscription = Umbraco.GetDictionaryValue("BuyNewSubscription");

	bool UserLoggedInOrNot = HPPlc.Models.SessionExpireAttribute.UserLoggedIn();

	//var Button1 = SignUpSection.Value<Link>("button1");
	//var Button2 = SignUpSection.Value<Link>("button2");
	//string Url = Request.Url.Host;

	var totalNoOfAgrGroupe = Umbraco?.ContentAtRoot()?.Where(x => x.ContentType.Alias == "home")?.FirstOrDefault()?.DescendantsOrSelf()?
			   .Where(x => x.ContentType.Alias == "ageMaster")?.FirstOrDefault()?.Children?.OfType<NameListItem>().ToList().Where(c => c.IsActice).Count();

	var toBeDisplayAgeGroupe = Umbraco?.ContentAtRoot()?.Where(x => x.ContentType.Alias == "home")?.FirstOrDefault()?.Children?
													.Where(x => x.ContentType.Alias == "worksheetNode")?.OfType<WorksheetNode>().FirstOrDefault()?.NoOfDisplayAgeGroupeWorksheet;

	int HpBundlePopupOpenCount = HPPlc.Models.SessionManagement.GetCurrentSession<int>(HPPlc.Models.SessionType.HpBundlePopupOpenCount);


	try
	{
		if (Request.QueryString.AllKeys.Contains("offer"))
		{
			if (Request.QueryString.Get("offer") != null)
			{
				string offerName = Request.QueryString.Get("offer");
				if (!String.IsNullOrEmpty(offerName) && offerName == "abm")
				{
					string rediectURL = System.Configuration.ConfigurationManager.AppSettings["SiteUrl"].ToString() + "subscription/buy-now/?subscriptionid=LBBsoS9AB+eZzE3Koo/+GQ==";
					HPPlc.Models.SessionManagement.StoreInSession(HPPlc.Models.SessionType.SplRedirection, rediectURL);


					if (UserLoggedInOrNot == false)
					{
						OpenLoginWindow = "yes";
					}
					else
					{
						Response.Redirect(rediectURL, false);
						OpenLoginWindow = "no";
					}
				}
			}
		}
	}
	catch { }

	//try
	//{
	//	string path = Server.MapPath("/Log/log.txt");

	//	string ip = System.Web.HttpContext.Current.Request.ServerVariables["HTTP_X_FORWARDED_FOR"];
	//	if (string.IsNullOrEmpty(ip))
	//	{
	//		ip = System.Web.HttpContext.Current.Request.ServerVariables["REMOTE_ADDR"];
	//	}
	//	string Url = Request.Url.ToString();
	//	string sessionId = Session.SessionID.ToString();
	//	string appendText = Url + " ---- " + sessionId + " ---- "+ ip + " ---- " + System.DateTime.Now + Environment.NewLine;
	//	System.IO.File.AppendAllText(path, appendText);
	//}
	//catch { }
}


@* the fun starts here *@
<input id="hdnFilter" type="hidden" />
<input id="hdnHpBundlePopupOpenCount" type="hidden" value="@HpBundlePopupOpenCount" />
<input id="hdnCurrentNode" type="hidden" value="@Model.Id" />
<input id="hdnSeeMore" type="hidden" value="@seeMore" />
<input id="hdnCultureInfo" type="hidden" value="@CultureInfo" />
<input id="hdnBuyNewSubscription" type="hidden" value="@BuyNewSubscription" />
<input id="hdnBuyNow" type="hidden" value="@buyNow" />
<input id="hdnDownloadText" type="hidden" value="@downloadText" />
<input id="hdnSubscribeforDownload" type="hidden" value="@SubscribefordownloadText" />

<input id="IsCurrentHomePage" type="hidden" value="yes" />
<input id="hdTobeDisplayWorksheet" type="hidden" value="0" />
<input id="hdTotalNoOfDisplayWorksheet" type="hidden" value="@totalNoOfAgrGroupe" />
<input id="hdAlreadyDisplayedWorksheet" type="hidden" value="@toBeDisplayAgeGroupe" />

<input id="page" type="hidden" value="Bonus" />
<input id="closeDesc" type="hidden" value="Close Structure program Login" />

<input id="OpenLoginWindow" type="hidden" value="@OpenLoginWindow" />
@*<input id="hdWhatsAppNotDwnld" value="@downloadPDF" type="hidden" />*@

@*<input type="hidden" id="bonusworksheetcurrentpage" value="@bonusworksheetcurrentpage" />*@

<div class="main-wrp">
	<a href="" target="_self"></a>
	@*@try
	{
		if (SignUpSection != null && UserLoggedInOrNot == false)
		{
			@Html.Partial("/Views/Partials/_TopSection.cshtml", SignUpSection)
		}
	}
	catch (Exception ex) { }*@

	@try
	{
		@Html.Partial("/Views/Partials/_Banner.cshtml");
	}
	catch (Exception ex) { }

	@Html.Partial("/Views/Partials/Worksheets/_SearchBoxStucturedProgram.cshtml")
	@*@try
		{
			@Html.Partial("/Views/Partials/Worksheets/_SearchBoxStucturedProgram.cshtml");
		}
		catch (Exception ex) { }*@

	@if (BonusWorkSheetNode != null)
	{
		<div class="container-fluid ContnPlc">
			<div class="container-box">
				<div class="container-inr">
					<div class="ContnPlcin">
						@if (Model.HasProperty("title"))
						{
							<div class="descTitlePlc">
								<h1 class="titleforhtag">@Html.Raw(Model.GetProperty("title").Value<string>().ToString())</h1>
							</div>
						}

						@*@if (Model.HasProperty("description"))
							{
								<div class="descContPlc">
									@Html.Raw(Model.Value("description"))
								</div>
							}*@

						<div class="dvdr"></div>
					</div>
				</div>
			</div>
		</div>
		<div class="video-tutorials ListingMnPlc">

			<div class="container-fluid">
				<div class="container-box">
					<div class="container-inr">
						<div class="ListingMnPlcin">
							<div class="fltrMnPlc bonuswrap">

								@Html.Partial("_FilterStructuredProgram")

								<div class="ritListingPlc">
									<div class="shortListRow">

										<div class="fltrMob">  <div class="fltrTitle"><i></i>@FilterBy:</div></div>

										<div class="shortByBox">
											@*<p>@SortBy :</p>*@
											<div class="shortByDrop">
												<select class="dropFltr" id="dropsortBy">
													<option value="0">@SortBy</option>
													@foreach (var SortByOption in SortByOptions)
													{
														<option value="@SortByOption.ItemValue">@SortByOption.ItemName</option>
													}
												</select>
											</div>
										</div>
									</div>
									<div class="thumListRow">
										<div class="list-items" id="WorksheetList">
										</div>
										<div id="pagediv" style="height:10px;"></div>
										<div class="lds-roller" id="worksheetLoading"></div>
									</div>
									@*<div class="ritListingPlcTop">


										</div>*@

									<div id="faqbox">
										@Html.CachedPartial("_footerSEOContent", Model, 3600)
										@Html.Partial("_footerContentData")
									</div>

								</div>

							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	}
</div>

<div class="scrollto_top">

	<div class="scrolltt_inr">

		<span></span>

	</div>
</div>

<div class="mob-fliter">Filter</div>
@*<div class="mob-fliter-2">Filter by Category</div>*@
@*<div class="mob-fliter-3">Filter by Weeks</div>*@
<div class="fltr-overlay"></div>
@*<a href="https://api.whatsapp.com/send?phone=+918800330330&text=Please%20send%20me%2030%20days%20learning%20package" target="_blank" class="floater-whatsapp"></a>*@

@Html.Partial("/Views/Partials/Login/_payLogic.cshtml")

@section metatags
{
	@Html.Partial("/Views/Partials/_MetaDataBind.cshtml")

	<script>
		gtag('event', 'conversion', { 'send_to': 'AW-315026447/OFckCPnPu44YEI_Ym5YB' });
	</script>
}


@section CustomJsFiles
{
	<script type="text/javascript" src="/CustumJs/BonusWorksheet/FilterStructuredProgram.js"></script>
	<script type="text/javascript" src="/CustumJs/BonusWorksheet/StructuredProgram.js"></script>


	<script>
		$(document).ready(function () {
			//window.location = "/under-maintenance";
			var hdnHpBundlePopupOpenCount = $("#hdnHpBundlePopupOpenCount").val();
			if (hdnHpBundlePopupOpenCount == 0) {
				IsBundlingUser();
			}

			var OpenLoginWindow = $("#OpenLoginWindow").val();
			if (OpenLoginWindow != null && OpenLoginWindow != '' && OpenLoginWindow != undefined && OpenLoginWindow == "yes") {
				$(".overlayLogin").show();
			}
		});
	</script>
	<script>
		function WorksheetFilter(filtrType) {
			BindWorkSheet(filtrType);
		}
			//$(window).scroll(scrollHandler);
	</script>

	@*<script>
			$(document).ready(function () {
				var hdWhatsAppNotDwnld = $('#hdWhatsAppNotDwnld').val();

				if (hdWhatsAppNotDwnld) {
					location.href = hdWhatsAppNotDwnld;
				}
			});
		</script>*@
}



