@inherits Umbraco.Web.Mvc.UmbracoViewPage
@using Umbraco.Web.Models
@{
	Layout = "masterpage.cshtml";
	var CultureInfo = Model.GetCultureFromDomains();
	string pageName = HPPlc.Models.GetPageName.pagename();

	var downloadText = Umbraco.GetDictionaryValue("Download Button");
	var SubscribefordownloadText = Umbraco.GetDictionaryValue("Subscribe to download");
	var buyNow = Umbraco.GetDictionaryValue("Upgrade to Premium");
	var BuyNewSubscription = Umbraco.GetDictionaryValue("BuyNewSubscription");
	var SortBy = Umbraco.GetDictionaryValue("SortBy");
	var FilterBy = Umbraco.GetDictionaryValue("FilterBy");

	var SortByOptions = Umbraco?.ContentAtRoot()?.Where(x => x.ContentType.Alias == "home")?.FirstOrDefault()?.Children?
					 .Where(x => x.ContentType.Alias == "masterRoot")?.FirstOrDefault()?.Children?
											.Where(x => x.ContentType.Alias == "sortMaster")?.FirstOrDefault()?.Children?
												.OfType<NameListItem>().Where(x => x.IsActice).ToList();
	//Check User LoggedIn Or Not
	var UserLoggedIn = HPPlc.Models.SessionManagement.GetCurrentSession<string>(HPPlc.Models.SessionType.IsLoggedIn);

	//string agegroup = HPPlc.Models.SessionManagement.GetCurrentSession<string>(HPPlc.Models.SessionType.UserSelectAgeOnWorksSheet);

	string agegroup = String.Empty;
	string qtype = String.Empty;
	string PathQString = Request.Url.ToString().Split('/').Where(x => !string.IsNullOrWhiteSpace(x)).LastOrDefault();
	if (!String.IsNullOrWhiteSpace(PathQString))
	{
		qtype = PathQString;
	}

	var root = Umbraco?.ContentAtRoot()?.Where(x => x.ContentType.Alias == "home")?
							.FirstOrDefault()?.DescendantsOrSelf()?
						.Where(x => x.ContentType.Alias == "structureProgramRoot").OfType<StructureProgramRoot>().FirstOrDefault();

	//var WorkSheetFilter = root?.DescendantsOrSelf()?
	//                        .Where(x => x.ContentType.Alias == "structureProgramRoot").OfType<WorksheetNode>().FirstOrDefault()?.WorksheetFilterOptions.Where(x => x.Activation).ToList();

	//var UserSelectVolumeOnWorksSheet = HPPlc.Models.SessionManagement.GetCurrentSession<string>(HPPlc.Models.SessionType.UserSelectVolumeOnWorksSheet);
	//var UserSelectCategoryOnWorksSheet = HPPlc.Models.SessionManagement.GetCurrentSession<string>(HPPlc.Models.SessionType.UserSelectCategoryOnWorksSheet);
	var categoryName = Model.Value<Link>("categoryName");
	IPublishedContent subject = null;
	string subjectValue = null;
	var topicsName = Model.Value<Link>("topicMapping");
	IPublishedContent topics = null;
	string topicsValue = null;
	var className = Model.Value<Link>("ageGroup");
	IPublishedContent classes = null;
	string classValue = null;

	if (categoryName != null && Model.ContentType.Alias == "worksheetCategory")
	{
		subject = Umbraco.Content(categoryName.Udi);
		subjectValue = subject.Value<string>("subjectValue");


		classes = Umbraco.Content(Model?.Parent?.Value<Link>("ageGroup")?.Udi);
		classValue = classes.Value<string>("itemValue");
	}
	if (Model.ContentType.Alias == "subjects")
	{
		subjectValue = Model.Value<string>("subjectValue");
	}
	if (Model.ContentType.Alias == "topics")
	{
		topicsValue = Model.Value<string>("topicValue");
	}
	if (Model.ContentType.Alias == "topicsName")
	{
		topics = Umbraco.Content(topicsName.Udi);
		topicsValue = topics.Value<string>("topicValue");

		subject = Umbraco.Content(Model?.Parent?.Value<Link>("categoryName")?.Udi);
		subjectValue = subject.Value<string>("subjectValue");

		classes = Umbraco.Content(Model?.Parent?.Parent?.Value<Link>("ageGroup")?.Udi);
		classValue = classes?.Value<string>("itemValue");
	}
	if (className != null && Model.ContentType.Alias == "worksheetListingAgeWise")
	{
		classes = Umbraco.Content(className.Udi);
		classValue = classes.Value<string>("itemValue");
	}


}

@section metatags
{
	@Html.Partial("~/Views/Partials/_MetaDataBind.cshtml")
}

<input id="hdnCultureInfo" type="hidden" value="@CultureInfo" />
<input id="hdnqtype" type="hidden" value="@qtype" />
@*<input id="hdnqtypeid" type="hidden" value="@qtypeid" />*@
<input id="hdnDownloadText" type="hidden" value="@downloadText" />
<input id="hdnSubscribeforDownload" type="hidden" value="@SubscribefordownloadText" />
<input id="hdnBuyNow" type="hidden" value="@buyNow" />
<input id="hdnBuyNewSubscription" type="hidden" value="@BuyNewSubscription" />

<input id="page" type="hidden" value="Bonus" />
<input id="closeDesc" type="hidden" value="Close Structure program Login" />
<input id="class" type="hidden" value="@classValue" />
<input id="subject" type="hidden" value="@subjectValue" />
<input id="topic" type="hidden" value="@topicsValue" />
@*<input type="hidden" id="bonusworksheetcurrentpage" value="@bonusworksheetcurrentpage" />*@

@*@Model.ContentType.Alias*@
<div class="main-wrp">
	@try
	{
		@Html.Partial("/Views/Partials/_Banner.cshtml");
	}
	catch (Exception ex) { }



	@Html.Partial("_Breadcrumb")

	<div class="container-fluid ContnPlc">
		<div class="container-box">
			<div class="container-inr">
				<div class="ContnPlcin">
					@if (Model.HasProperty("title"))
					{
						<div class="descTitlePlc">
							<h1 class="titleforhtag">@Html.Raw(Model.GetProperty("title").Value<string>().ToString())</h1>
						</div>
					}

					@if (Model.HasProperty("description"))
					{
						<div class="descContPlc">
							@Html.Raw(Model.Value("description"))
						</div>
					}

					<div class="dvdr"></div>
				</div>
			</div>
		</div>
	</div>

	<div class="video-tutorials ListingMnPlc">

		<div class="container-fluid">
			<div class="container-box">
				<div class="container-inr">
					<div class="ListingMnPlcin">
						<div class="fltrMnPlc bonuswrap">

							@Html.Partial("_FilterStructuredProgram")

							<div class="ritListingPlc">
								<div class="shortListRow">

									<div class="fltrMob">  <div class="fltrTitle"><i></i>@FilterBy:</div></div>

									<div class="shortByBox">
										@*<p>@SortBy :</p>*@
										<div class="shortByDrop">
											<select class="dropFltr" id="dropsortBy">
												<option value="0">@SortBy</option>
												@foreach (var SortByOption in SortByOptions)
												{
													<option value="@SortByOption.ItemValue">@SortByOption.ItemName</option>
												}
											</select>
										</div>
									</div>
								</div>
								<div class="thumListRow">
									<div class="list-items" id="WorksheetList">

									</div>
									<div id="pagediv" style="height:10px;"></div>
									<div class="lds-roller" id="worksheetLoading"></div>
								</div>
								@*<div class="ritListingPlcTop">


									</div>*@

								<div id="faqbox">
									@Html.CachedPartial("_footerSEOContent", Model, 3600)
									@Html.Partial("_footerContentData")
								</div>

							</div>

						</div>
					</div>
				</div>
			</div>
		</div>

	</div>


</div>
<div class="scrollto_top">
	<div class="scrolltt_inr">
		<span></span>
	</div>
</div>
<div class="mob-fliter">Filter</div>
@*<div class="overlayLogin" style="display:none">
		@Html.Partial("/Views/Partials/Login/_loginSnd.cshtml")
	</div>*@

@Html.Partial("/Views/Partials/Login/_payLogic.cshtml")

@section CustomJsFiles
{

	<script type="text/javascript" src="/CustumJs/BonusWorksheet/FilterStructuredProgram.js"></script>
	<script type="text/javascript" src="/CustumJs/BonusWorksheet/StructuredProgram.js"></script>


	<script>
		function loadMore(displayCount) {
			loadMoreData(displayCount);
		}

	</script>

}



