@inherits Umbraco.Web.Mvc.UmbracoViewPage<HPPlc.Models.WorkSheet.WorkSheetModel>
@using HPPlc.Models.WorkSheet;
@using System.Globalization;

@{
	var model = Model;
	string pageName = HPPlc.Models.GetPageName.pagename();

	string classForQuiz = string.Empty;
	bool tobeDisplayQuiButton = false;

	bool UserLoggedInOrNot = HPPlc.Models.SessionExpireAttribute.UserLoggedIn();

	string Paid = Umbraco.GetDictionaryValue("Paid");
	string Free = Umbraco.GetDictionaryValue("Free");

	string RecentlyDownloaded = Umbraco.GetDictionaryValue("RecentlyDownloaded");
}
@if (model != null && Model.WorkSheets != null && Model.WorkSheets.Any() && Model.WorkSheets.Count() > 0)
{
<div class="list-items">

	@foreach (WorkSheetItems item in Model.WorkSheets)
	{
		if (item != null && item.NestedItems != null && item.NestedItems.Any() && item.NestedItems.Count() > 0)
		{
			//Video Code
			foreach (HPPlc.Models.Videos.VideosItems videoitem in Model.Videos)

			{

				if (videoitem != null && videoitem.NestedItems != null && videoitem.NestedItems.Any() && videoitem.NestedItems.Count() > 0)

				{

					foreach (HPPlc.Models.Videos.NestedItems nested in videoitem.NestedItems)

					{

						var detailData = string.Empty;

						if (!string.IsNullOrEmpty(item.Title))

						{

							detailData = item.Title;

						}

						if (!string.IsNullOrEmpty(nested.Volume))

						{

							detailData = detailData + "-" + nested.Volume;

						}

						//if (!string.IsNullOrEmpty(nested.Subject))

						//{

						//    detailData = detailData + "-" + nested.Subject;

						//}

						<div class="item-col">

							<div class="card-box">

								@*@if (nested.RecentlyDownloaded)

									{

										<div class="tagBox">@RecentlyDownloaded</div>

									}*@

								<div class="card-img">

									<a href="@(nested.VideoUrl + "?s=bns")">

										<picture>

											@*@if (!string.IsNullOrWhiteSpace(nested.MobileImagesSrc))

												{

													<source class='b-lazy' alt="@nested.MobileAltText" data-src="@nested.MobileImagesSrc" src="/common/images/img-loader.gif" media="(max-width: 680px)" />

												}

												@if (!string.IsNullOrWhiteSpace(nested.MobileNextGenImage))

												{

													<source data-srcset="@nested.MobileNextGenImage" srcset="/common/images/img-loader.gif" type='image/webp' media="(max-width: 680px)" />

												}*@

											@if (!string.IsNullOrWhiteSpace(nested.NextGenImage))
											{
												<source data-srcset="/common/images/img-loader.gif" srcset="@nested.NextGenImage" type='image/webp' />
											}

											@if (!string.IsNullOrWhiteSpace(nested.ImagesSrc))
											{

												<img class="b-lazy b-loaded" alt="@nested.AltText" src='/common/images/img-loader.gif' data-src='@nested.ImagesSrc' width="200" height="200" />

											}

										</picture>

									</a>

									@*@if (nested.IsPaid)

										{

											<div class="paidIcon">

												<em></em><i></i>

											</div>

										}*@

								</div>

								<div class="card-cont">

									<div class="card-dscptn">

										<div class="card-title">@nested.Title</div>

									</div>

									<div class="prntDonld">

										@if (nested.socialItems != null && (nested.socialItems.FBShare != null || nested.socialItems.EmailShare != null || nested.socialItems.WhatAppShare != null))

										{

											var detailShareData = string.Empty;

											try

											{

												if (!string.IsNullOrEmpty(item.Title))

												{

													detailShareData = item.Title;

												}

												if (!string.IsNullOrEmpty(nested.Volume))

												{

													detailShareData = detailShareData + "-" + nested.Volume;

												}

												if (!string.IsNullOrEmpty(nested.Description.ToString()))

												{

													System.Text.RegularExpressions.Regex rx = new System.Text.RegularExpressions.Regex("<[^>]*>");

													string dtls = rx.Replace(nested.Description.ToString(), "").Replace("\n", "");

													detailShareData = detailShareData + "-" + dtls;

												}

											}

											catch { }

											<div class='card-social-icon'>

												<div class='share-icon'>

													<div class='share-box'>

														<ul>

															@if (nested.socialItems.FBShare != null)
															{

																<li><a href='javascript:void(0)' class='fb-icon aFBShare' onclick="commonShareLayer('Share_facebook','@detailShareData');"><span style='display:none'>@nested.socialItems.FBShare</span></a></li>

															}

															@if (nested.socialItems.WhatAppShare != null)
															{

																<li>

																	<a href='javascript:void(0)' class='whatsapp-icon aWHTAppSH' onclick="commonShareLayer('Share_whatsapp','@detailShareData');">

																		<span style='display:none'>

																			@nested.socialItems.WhatAppShare

																		</span>

																	</a>

																</li>

															}

															@if (nested.socialItems.EmailShare != null)
															{
																<li>

																	<a href='javascript:void(0)' class='mail-icon aMailSh' onclick="commonShareLayer('Share_mail','@detailShareData');">

																		<span style='display:none'>

																			@nested.socialItems.EmailShare

																		</span>

																	</a>

																</li>

															}

														</ul>

													</div>

												</div>

											</div>

										}

										@*<div class="prntDonld">

												<div class="print-col">

													@if (UserLoggedInOrNot == true)

													{

														<a href="javascript:void(0);" onclick="downloadDocmnt('print','@nested.subscriptionStatus.DownloadString','@(nested.IsPaid ? "Paid" : "Free")','@detailData')"></a>

													}

													else

													{

														<a href="javascript:void(0)" onclick="Login('print','@nested.subscriptionStatus.DownloadUrl','@(nested.IsPaid ? "Paid" : "Free")','@detailData')"></a>

													}

												</div>

												<div class="downld-col">

													@if (UserLoggedInOrNot == true)

													{

														<a href="javascript:void(0);" onclick="downloadDocmnt('dwnld','@nested.subscriptionStatus.DownloadUrl','@(nested.IsPaid ? "Paid" : "Free")','@detailData')"></a>

													}

													else

													{

														<a href="javascript:void(0)" onclick="Login('dwnld','@nested.subscriptionStatus.DownloadUrl','@(nested.IsPaid ? "Paid" : "Free")','@detailData')"></a>

													}

												</div>

											</div>*@

									</div>

								</div>

								<div class="card-dscptnNew">

									<p>@Html.Raw(nested.Description)</p>

								</div>

								@*<div class="sheetTag">

										<ul>

											@if (nested.SelectedClasses != null)

											{

												foreach (var SelectedClass in nested.SelectedClasses)

												{

													<li>@SelectedClass </li>

												}

											}

										</ul>

									</div>*@

							</div>

						</div>

					}


				}

			}
			foreach (NestedItems nested in item.NestedItems)
			{
				var detailData = string.Empty;
				if (!string.IsNullOrEmpty(item.Title))
				{
					detailData = item.Title;
				}
				if (!string.IsNullOrEmpty(nested.Volume))
				{
					detailData = detailData + "-" + nested.Volume;
				}
				if (!string.IsNullOrEmpty(nested.Subject))
				{
					detailData = detailData + "-" + nested.Subject;
				}
				<div class="item-col">
					<div class="card-box">
						@if (nested.RecentlyDownloaded)
						{
							<div class="tagBox">@RecentlyDownloaded</div>
						}
						<div class="card-img">
							<a href="@nested.WorksheetDetailsUrl">
								<picture>
									@if (!string.IsNullOrWhiteSpace(nested.MobileImagesSrc))
									{
										<source class='b-lazy' alt="@nested.MobileAltText" data-src="@nested.MobileImagesSrc" src="/common/images/img-loader.gif" media="(max-width: 680px)" />
									}

									@if (!string.IsNullOrWhiteSpace(nested.MobileNextGenImage))
									{
										<source data-srcset="@nested.MobileNextGenImage" srcset="/common/images/img-loader.gif" type='image/webp' media="(max-width: 680px)" />
									}

									@if (!string.IsNullOrWhiteSpace(nested.NextGenImage))
									{
										<source data-srcset="@nested.NextGenImage" srcset="/common/images/img-loader.gif" type='image/webp' />
									}

									@if (!string.IsNullOrWhiteSpace(nested.ImagesSrc))
									{
										<img class="b-lazy b-loaded" alt="@nested.AltText" src='@nested.ImagesSrc' data-src='@nested.ImagesSrc' width="200" height="200" />
									}
								</picture>
							</a>
							@if (nested.IsPaid)
							{
								<div class="paidIcon">
									<em></em><i>@Paid</i>
								</div>
							}
							else
							{
								<div class="freeLab">
									@Free
								</div>
							}
						</div>
						<div class="card-cont">
							<div class="card-dscptn">
								<div class="card-title">@nested.Title</div>
							</div>

							<div class="prntDonld">
								@if (nested.socialItems != null && (nested.socialItems.FBShare != null || nested.socialItems.EmailShare != null || nested.socialItems.WhatAppShare != null))
								{
									var detailShareData = string.Empty;
									try
									{
										if (!string.IsNullOrEmpty(item.Title))
										{
											detailShareData = item.Title;
										}
										if (!string.IsNullOrEmpty(nested.Volume))
										{
											detailShareData = detailShareData + "-" + nested.Volume;
										}
										if (!string.IsNullOrEmpty(nested.Description.ToString()))
										{
											System.Text.RegularExpressions.Regex rx = new System.Text.RegularExpressions.Regex("<[^>]*>");
											string dtls = rx.Replace(nested.Description.ToString(), "").Replace("\n", "");

											detailShareData = detailShareData + "-" + dtls;
										}
									}
									catch { }

									<div class='card-social-icon'>
										<div class='share-icon'>
											<div class='share-box'>
												<ul>
													@if (nested.socialItems.FBShare != null)
													{
														<li><a href='javascript:void(0)' class='fb-icon aFBShare' onclick="commonShareLayer('Share_facebook','@detailShareData');"><span style='display:none'>@nested.socialItems.FBShare</span></a></li>
													}
													@if (nested.socialItems.WhatAppShare != null)
													{
														<li>
															<a href='javascript:void(0)' class='whatsapp-icon aWHTAppSH' onclick="commonShareLayer('Share_whatsapp','@detailShareData');">
																<span style='display:none'>
																	@nested.socialItems.WhatAppShare
																</span>
															</a>
														</li>
													}
													@if (nested.socialItems.EmailShare != null)
													{
														<li>
															<a href='javascript:void(0)' class='mail-icon aMailSh' onclick="commonShareLayer('Share_mail','@detailShareData');">
																<span style='display:none'>
																	@nested.socialItems.EmailShare
																</span>
															</a>
														</li>
													}
												</ul>
											</div>
										</div>
									</div>
								}
								<div class="prntDonld">
									<div class="print-col">
										@if (UserLoggedInOrNot == true)
										{
											<a href="javascript:void(0);" onclick="downloadDocmnt('print','@nested.subscriptionStatus.DownloadString','@(nested.IsPaid ? "Paid" : "Free")','@detailData')"></a>
										}
										else
										{
											<a href="javascript:void(0)" onclick="Login('print','@nested.subscriptionStatus.DownloadUrl','@(nested.IsPaid ? "Paid" : "Free")','@detailData')"></a>
										}
									</div>
									<div class="downld-col">
										@if (UserLoggedInOrNot == true)
										{
											<a href="javascript:void(0);" onclick="downloadDocmnt('dwnld','@nested.subscriptionStatus.DownloadUrl','@(nested.IsPaid ? "Paid" : "Free")','@detailData')"></a>
										}
										else
										{
											<a href="javascript:void(0)" onclick="Login('dwnld','@nested.subscriptionStatus.DownloadUrl','@(nested.IsPaid ? "Paid" : "Free")','@detailData')"></a>
										}
									</div>

								</div>
							</div>

						</div>
						<div class="card-dscptnNew">
							<p>@Html.Raw(nested.SubTitle)</p>
						</div>
						<div class="sheetTag">
							<ul>
								@if (nested.SelectedClasses != null)
								{
									foreach (var SelectedClass in nested.SelectedClasses)
									{
										<li>@SelectedClass </li>
									}
								}
							</ul>
						</div>


					</div>


				</div>

			}



		}
		else
		{
			<div class='fit-hd' style="text-align:center"><h5>@Umbraco.GetDictionaryValue("No Result Found", "No Result Found")</h5></div>
		}

	}
</div>
	<div class="paging">
		@{ var totalPage = (model.Paging.TotalItems % model.Paging.DisplayItems) != 0 ? (model.Paging.TotalItems / model.Paging.DisplayItems + 1) : (model.Paging.TotalItems / model.Paging.DisplayItems);
			var startPage = model.Paging.NextPage < 5 ? 0 : (model.Paging.NextPage - 4);
			var endPage = model.Paging.NextPage < 5 ? 5 : (model.Paging.NextPage + 1); @*<p>@Model.Paging.NextPage</p>
				<p>@totalPage</p>*@ if (totalPage > 1)
			{
				if (model.Paging.NextPage == 1)
				{
					<button class="first-page" data-val="1">First</button> }
				if (model.Paging.NextPage > 2)
				{
					<button class="previous-page" data-val="@(model.Paging.NextPage - 2)">Previous</button> }
				for (int i = startPage; i < totalPage; i++)
				{
					if (i < endPage)
					{
						if (i + 1 == (model.Paging.NextPage - 1))
						{
							<button class="current-page" data-val="@(i + 1)" disabled="disabled">@(i + 1)</button> }
						else
						{
							<button class="current-page" data-val="@(i + 1)">@(i + 1)</button> }
					}
				}
				if (model.Paging.NextPage <= totalPage)
				{
					<button class="next-page" data-val="@(model.Paging.NextPage)">Next</button> }
				if (model.Paging.NextPage == totalPage)
				{
					<button class="last-page" data-val="@totalPage">Last</button> }
			} }
	</div>
}
else
{
	<div class='fit-hd' style="text-align:center"><h5>@Umbraco.GetDictionaryValue("No Result Found", "No Result Found")</h5></div>
}

<input type="hidden" id="NoOfWorksheetCnt" value="@(Model?.WorkSheets?.FirstOrDefault()?.NestedItems?.Count())" />